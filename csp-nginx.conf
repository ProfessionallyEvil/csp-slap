# CSP Demo NGINX Configuration
# This configuration demonstrates Content Security Policy implementation
# with special handling for NGINX-based nonce generation

# Increase server names hash bucket size for long domain names
server_names_hash_bucket_size 64;

# Upstream backend server
upstream csp_backend {
    server localhost:3001;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=api:10m rate=5r/s;

# Default server block (catches undefined hosts)
server {
    listen 80 default_server;
    server_name _;
    return 444; # Close connection without response
}

# Vulnerable domain - No CSP protection
server {
    listen 80;
    server_name vulnerable.example.com;
    
    # Rate limiting
    limit_req zone=general burst=20 nodelay;
    
    # Security headers (minimal for vulnerable demo)
    add_header X-Frame-Options "SAMEORIGIN" always;
    
    # Proxy root to vulnerable route
    location = / {
        proxy_pass http://csp_backend/vulnerable;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Disable caching for demo
        proxy_cache_bypass 1;
        proxy_no_cache 1;
        add_header Cache-Control "no-store, no-cache, must-revalidate" always;
    }

    # Proxy all other requests
    location / {
        proxy_pass http://csp_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Disable caching for demo
        proxy_cache_bypass 1;
        proxy_no_cache 1;
        add_header Cache-Control "no-store, no-cache, must-revalidate" always;
    }
}

# Basic CSP domain
server {
    listen 80;
    server_name basic-csp.example.com;

    # Rate limiting
    limit_req zone=general burst=20 nodelay;

    # Security headers with basic CSP
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Basic CSP policy
    add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self'; form-action 'self'; img-src *; object-src 'none';" always;

    # Proxy root to basic-csp route
    location = / {
        proxy_pass http://csp_backend/basic-csp;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Disable caching for demo
        proxy_cache_bypass 1;
        proxy_no_cache 1;
        add_header Cache-Control "no-store, no-cache, must-revalidate" always;
    }

    # Proxy all other requests
    location / {
        proxy_pass http://csp_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Disable caching for demo
        proxy_cache_bypass 1;
        proxy_no_cache 1;
        add_header Cache-Control "no-store, no-cache, must-revalidate" always;
    }
}

# Hash-based CSP domain
server {
    listen 80;
    server_name hash-csp.example.com;

    # Rate limiting
    limit_req zone=general burst=20 nodelay;

    # Security headers with hash-based CSP
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Hash-based CSP policy (hash will be set by backend)
    # Backend will override this header with proper hash

    # Proxy root to hash-csp route
    location = / {
        proxy_pass http://csp_backend/hash-csp;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Disable caching for demo
        proxy_cache_bypass 1;
        proxy_no_cache 1;
        add_header Cache-Control "no-store, no-cache, must-revalidate" always;
    }

    # Proxy all other requests
    location / {
        proxy_pass http://csp_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Disable caching for demo
        proxy_cache_bypass 1;
        proxy_no_cache 1;
        add_header Cache-Control "no-store, no-cache, must-revalidate" always;
    }
}

# NGINX Nonce domain - This is where the magic happens!
server {
    listen 80;
    server_name nonce-nginx.example.com;

    # Rate limiting
    limit_req zone=general burst=20 nodelay;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Generate nonce using request ID and timestamp for uniqueness
    set $csp_nonce "${request_id}_${msec}";

    # Set CSP header with generated nonce
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'nonce-$csp_nonce' 'strict-dynamic'; style-src 'self' 'unsafe-inline'; img-src *; object-src 'none'; base-uri 'self';" always;

    # Proxy root to nonce-nginx route with sub_filter
    location = / {
        # Enable sub_filter module for nonce replacement
        sub_filter_once off;

        # Replace nonce placeholder with actual nonce
        sub_filter '__CSP_NONCE__' $csp_nonce;

        # Proxy to backend with special headers
        proxy_pass http://csp_backend/nonce-nginx;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-CSP-Nonce $csp_nonce;

        # Disable caching for nonce freshness
        proxy_cache_bypass 1;
        proxy_no_cache 1;
        add_header Cache-Control "no-store, no-cache, must-revalidate" always;
        add_header Pragma "no-cache" always;
        expires off;
        etag off;
    }

    # Special handling for nonce-nginx routes
    location /nonce-nginx {
        # Enable sub_filter module for nonce replacement
        sub_filter_once off;

        # Replace nonce placeholder with actual nonce
        sub_filter '__CSP_NONCE__' $csp_nonce;

        # Proxy to backend with special headers
        proxy_pass http://csp_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-CSP-Nonce $csp_nonce;

        # Disable caching for nonce freshness
        proxy_cache_bypass 1;
        proxy_no_cache 1;
        add_header Cache-Control "no-store, no-cache, must-revalidate" always;
        add_header Pragma "no-cache" always;
        expires off;
        etag off;
    }

    # All other routes for this domain
    location / {
        proxy_pass http://csp_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Disable caching for demo
        proxy_cache_bypass 1;
        proxy_no_cache 1;
        add_header Cache-Control "no-store, no-cache, must-revalidate" always;
    }
}

# Helmet Nonce domain
server {
    listen 80;
    server_name nonce-helmet.example.com;

    # Rate limiting
    limit_req zone=general burst=20 nodelay;

    # Security headers (CSP will be set by Helmet middleware)
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Proxy root to nonce-helmet route
    location = / {
        proxy_pass http://csp_backend/nonce-helmet;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Disable caching for demo
        proxy_cache_bypass 1;
        proxy_no_cache 1;
        add_header Cache-Control "no-store, no-cache, must-revalidate" always;
    }

    # Proxy all other requests
    location / {
        proxy_pass http://csp_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Disable caching for demo
        proxy_cache_bypass 1;
        proxy_no_cache 1;
        add_header Cache-Control "no-store, no-cache, must-revalidate" always;
    }
}

# Malicious domain simulation
server {
    listen 80;
    server_name malicious.example.com;

    # Rate limiting (more restrictive for malicious simulation)
    limit_req zone=api burst=10 nodelay;

    # Minimal security headers for malicious demo
    add_header X-Frame-Options "DENY" always;

    # Proxy root to malicious route
    location = / {
        proxy_pass http://csp_backend/malicious;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Disable caching for demo
        proxy_cache_bypass 1;
        proxy_no_cache 1;
        add_header Cache-Control "no-store, no-cache, must-revalidate" always;
    }

    # Proxy all other requests
    location / {
        proxy_pass http://csp_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Disable caching for demo
        proxy_cache_bypass 1;
        proxy_no_cache 1;
        add_header Cache-Control "no-store, no-cache, must-revalidate" always;
    }
}

# Main demo navigation page
server {
    listen 80;
    server_name demo.example.com;

    # Rate limiting
    limit_req zone=general burst=20 nodelay;

    # Basic security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;

    # Proxy to backend (shows navigation page)
    location / {
        proxy_pass http://csp_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Disable caching for demo
        proxy_cache_bypass 1;
        proxy_no_cache 1;
        add_header Cache-Control "no-store, no-cache, must-revalidate" always;
    }
}

# Localhost fallback (for development without domain setup)
server {
    listen 80;
    server_name localhost;

    # Rate limiting
    limit_req zone=general burst=20 nodelay;

    # Basic security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;

    # Proxy to backend (shows navigation page)
    location / {
        proxy_pass http://csp_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Disable caching for demo
        proxy_cache_bypass 1;
        proxy_no_cache 1;
        add_header Cache-Control "no-store, no-cache, must-revalidate" always;
    }
}