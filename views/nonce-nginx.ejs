<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link rel="stylesheet" href="/css/styles.css">
</head>
<body>
    <header>
        <nav>
            <h1>CSP Demo: <%= domain %></h1>
            <a href="/" class="nav-home">‚Üê Back to Scenarios</a>
        </nav>
    </header>
    
    <main>
        <div class="demo-content">
            <div class="csp-status csp-secure">
                üîß NGINX NONCE CSP PROTECTION - Legacy-friendly implementation
            </div>
            
            <h2>NGINX Nonce Demo Page</h2>
            <p>This page demonstrates a legacy-friendly CSP approach using NGINX sub_filter to inject nonces into static HTML.</p>
            
            <div class="code-example">
# NGINX Configuration:
location / {
    set $csp_nonce $request_id$msec;
    sub_filter '__CSP_NONCE__' $csp_nonce;
    sub_filter_once off;
    add_header Content-Security-Policy "script-src 'self' 'nonce-$csp_nonce'";
    proxy_pass http://backend;
}
            </div>
            
            <div class="demo-form">
                <h3>User Comment Form (Nonce-Protected)</h3>
                <form id="commentForm">
                    <input type="text" id="username" placeholder="Your name" required>
                    <input type="text" id="comment" placeholder="Try XSS: <img src=x onerror=alert('XSS!')>" required>
                    <button type="submit">Post Comment</button>
                </form>
                <div id="comments"></div>
            </div>
            
            <div class="demo-form">
                <h3>Script Execution Tests</h3>
                <button onclick="testInlineScript()">Test Inline Script (WILL FAIL)</button>
                <button id="legitimateBtn">Test Legitimate Nonce Script (WORKS)</button>
                <button id="externalScriptBtn">Test External Script (WILL FAIL)</button>
            </div>
            
            <div class="timer-display" id="timer">Timer: 60</div>
            
            <div class="demo-info">
                <h3>What you should observe:</h3>
                <ul>
                    <li>‚úÖ Scripts with matching nonce execute normally</li>
                    <li>‚ùå Scripts without nonce are blocked</li>
                    <li>‚ùå Injected scripts cannot guess the nonce</li>
                    <li>üîç View page source to see the nonce value in HTML</li>
                </ul>
                
                <h4>Legacy-Friendly Approach:</h4>
                <p>This method allows adding CSP protection to existing applications without modifying application code. NGINX handles nonce generation and injection.</p>
                <p><strong>Current nonce:</strong> <%= nonce %></p>
            </div>
        </div>
    </main>
    
    <!-- This script has the nonce placeholder that NGINX would replace -->
    <script nonce="<%= nonce %>">
        let timerCount = 60;
        const timerElement = document.getElementById('timer');
        
        function updateTimer() {
            timerCount--;
            timerElement.textContent = `Timer: ${timerCount}`;
            if (timerCount <= 0) {
                timerCount = 60;
            }
        }
        
        setInterval(updateTimer, 1000);
        
        document.getElementById('commentForm').addEventListener('submit', function(event) {
            event.preventDefault();
            const username = document.getElementById('username').value;
            const comment = document.getElementById('comment').value;
            const commentsDiv = document.getElementById('comments');
            
            const commentHTML = `<div class="comment-item">
                <strong>${username}:</strong> ${comment}
            </div>`;
            
            commentsDiv.innerHTML += commentHTML;
            this.reset();
        });
        
        document.getElementById('legitimateBtn').addEventListener('click', function() {
            alert('This nonce-protected script is allowed to execute!');
        });
        
        document.getElementById('externalScriptBtn').addEventListener('click', function() {
            const script = document.createElement('script');
            script.src = 'https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js';
            script.onload = () => alert('External script loaded!');
            script.onerror = () => console.log('External script blocked by CSP');
            document.head.appendChild(script);
        });
    </script>
</body>
</html>