# NGINX configuration for Docker container
# This file replaces the default nginx.conf in the container

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging configuration
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Upstream backend server
    upstream csp_backend {
        server 127.0.0.1:3001;
        keepalive 32;
    }

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=api:10m rate=5r/s;

    # Default server block (catches undefined hosts)
    server {
        listen 80 default_server;
        server_name _;
        return 444; # Close connection without response
    }

    # Vulnerable domain - No CSP protection
    server {
        listen 80;
        server_name vulnerable.example.com;
        
        # Rate limiting
        limit_req zone=general burst=20 nodelay;
        
        # Security headers (minimal for vulnerable demo)
        add_header X-Frame-Options "SAMEORIGIN" always;
        
        # Proxy root to vulnerable route
        location = / {
            proxy_pass http://csp_backend/vulnerable;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Disable caching for demo
            proxy_cache_bypass 1;
            proxy_no_cache 1;
            add_header Cache-Control "no-store, no-cache, must-revalidate" always;
        }
        
        # Proxy all other requests
        location / {
            proxy_pass http://csp_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Disable caching for demo
            proxy_cache_bypass 1;
            proxy_no_cache 1;
            add_header Cache-Control "no-store, no-cache, must-revalidate" always;
        }
    }

    # Basic CSP domain
    server {
        listen 80;
        server_name basic-csp.example.com;
        
        # Rate limiting
        limit_req zone=general burst=20 nodelay;
        
        # Security headers with basic CSP
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # Basic CSP policy
        add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self'; form-action 'self'; img-src *; object-src 'none';" always;
        
        # Proxy root to basic-csp route
        location = / {
            proxy_pass http://csp_backend/basic-csp;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Disable caching for demo
            proxy_cache_bypass 1;
            proxy_no_cache 1;
            add_header Cache-Control "no-store, no-cache, must-revalidate" always;
        }

        # Proxy all other requests
        location / {
            proxy_pass http://csp_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Disable caching for demo
            proxy_cache_bypass 1;
            proxy_no_cache 1;
            add_header Cache-Control "no-store, no-cache, must-revalidate" always;
        }
    }

    # Hash-based CSP domain
    server {
        listen 80;
        server_name hash-csp.example.com;
        
        # Rate limiting
        limit_req zone=general burst=20 nodelay;
        
        # Security headers with hash-based CSP
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # Hash-based CSP policy (hash will be set by backend)
        # Backend will override this header with proper hash
        
        # Proxy root to hash-csp route
        location = / {
            proxy_pass http://csp_backend/hash-csp;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Disable caching for demo
            proxy_cache_bypass 1;
            proxy_no_cache 1;
            add_header Cache-Control "no-store, no-cache, must-revalidate" always;
        }

        # Proxy all other requests
        location / {
            proxy_pass http://csp_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Disable caching for demo
            proxy_cache_bypass 1;
            proxy_no_cache 1;
            add_header Cache-Control "no-store, no-cache, must-revalidate" always;
        }
    }

    # NGINX Nonce domain - This is where the magic happens!
    server {
        listen 80;
        server_name nonce-nginx.example.com;
        
        # Rate limiting
        limit_req zone=general burst=20 nodelay;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        # Generate nonce using request ID and timestamp for uniqueness
        set $csp_nonce "${request_id}_${msec}";
        
        # Set CSP header with generated nonce
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'nonce-$csp_nonce' 'strict-dynamic'; style-src 'self' 'unsafe-inline'; img-src *; object-src 'none'; base-uri 'self';" always;
        
        # Proxy root to nonce-nginx route with sub_filter
        location = / {
            # Enable sub_filter module for nonce replacement
            sub_filter_once off;
            
            # Replace nonce placeholder with actual nonce
            sub_filter '__CSP_NONCE__' $csp_nonce;
            
            # Proxy to backend with special headers
            proxy_pass http://csp_backend/nonce-nginx;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-CSP-Nonce $csp_nonce;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Disable caching for nonce freshness
            proxy_cache_bypass 1;
            proxy_no_cache 1;
            add_header Cache-Control "no-store, no-cache, must-revalidate" always;
            add_header Pragma "no-cache" always;
            expires off;
            etag off;
        }

        # Special handling for nonce-nginx routes
        location /nonce-nginx {
            # Enable sub_filter module for nonce replacement
            sub_filter_once off;
            
            # Replace nonce placeholder with actual nonce
            sub_filter '__CSP_NONCE__' $csp_nonce;
            
            # Proxy to backend with special headers
            proxy_pass http://csp_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-CSP-Nonce $csp_nonce;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Disable caching for nonce freshness
            proxy_cache_bypass 1;
            proxy_no_cache 1;
            add_header Cache-Control "no-store, no-cache, must-revalidate" always;
            add_header Pragma "no-cache" always;
            expires off;
            etag off;
        }
        
        # All other routes for this domain
        location / {
            proxy_pass http://csp_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Disable caching for demo
            proxy_cache_bypass 1;
            proxy_no_cache 1;
            add_header Cache-Control "no-store, no-cache, must-revalidate" always;
        }
    }

    # Helmet Nonce domain
    server {
        listen 80;
        server_name nonce-helmet.example.com;
        
        # Rate limiting
        limit_req zone=general burst=20 nodelay;
        
        # Security headers (CSP will be set by Helmet middleware)
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # Proxy root to nonce-helmet route
        location = / {
            proxy_pass http://csp_backend/nonce-helmet;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Disable caching for demo
            proxy_cache_bypass 1;
            proxy_no_cache 1;
            add_header Cache-Control "no-store, no-cache, must-revalidate" always;
        }

        # Proxy all other requests
        location / {
            proxy_pass http://csp_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Disable caching for demo
            proxy_cache_bypass 1;
            proxy_no_cache 1;
            add_header Cache-Control "no-store, no-cache, must-revalidate" always;
        }
    }

    # Malicious domain simulation
    server {
        listen 80;
        server_name malicious.example.com;
        
        # Rate limiting (more restrictive for malicious simulation)
        limit_req zone=api burst=10 nodelay;
        
        # Minimal security headers for malicious demo
        add_header X-Frame-Options "DENY" always;
        
        # Proxy root to malicious route
        location = / {
            proxy_pass http://csp_backend/malicious;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Disable caching for demo
            proxy_cache_bypass 1;
            proxy_no_cache 1;
            add_header Cache-Control "no-store, no-cache, must-revalidate" always;
        }

        # Proxy all other requests
        location / {
            proxy_pass http://csp_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Disable caching for demo
            proxy_cache_bypass 1;
            proxy_no_cache 1;
            add_header Cache-Control "no-store, no-cache, must-revalidate" always;
        }
    }

    # Main demo navigation page
    server {
        listen 80;
        server_name demo.example.com;

        # Rate limiting
        limit_req zone=general burst=20 nodelay;

        # Basic security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;

        # Proxy to backend (shows navigation page)
        location / {
            proxy_pass http://csp_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Disable caching for demo
            proxy_cache_bypass 1;
            proxy_no_cache 1;
            add_header Cache-Control "no-store, no-cache, must-revalidate" always;
        }
    }

    # Localhost fallback - Shows setup instructions
    server {
        listen 80;
        server_name localhost;

        # Rate limiting
        limit_req zone=general burst=20 nodelay;

        # Basic security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Content-Type "text/html; charset=utf-8" always;

        # Return setup instructions instead of proxying
        location / {
            return 200 '<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CSP Demo Container - Setup Required</title>
    <style>
        body { 
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
            max-width: 800px; 
            margin: 50px auto; 
            padding: 20px;
            background: #f5f5f5;
            line-height: 1.6;
        }
        .container {
            background: white;
            padding: 30px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        h1 { 
            color: #d32f2f; 
            margin-bottom: 20px;
        }
        h2 { 
            color: #1976d2; 
            margin-top: 30px;
        }
        .code-block {
            background: #f8f8f8;
            border: 1px solid #ddd;
            border-radius: 4px;
            padding: 15px;
            margin: 15px 0;
            font-family: "Courier New", monospace;
            font-size: 14px;
            overflow-x: auto;
            white-space: pre-wrap;
        }
        .warning {
            background: #fff3cd;
            border: 1px solid #ffeaa7;
            border-radius: 4px;
            padding: 15px;
            margin: 20px 0;
        }
        ul { margin: 10px 0; }
        li { margin: 5px 0; }
        .next-step {
            background: #e8f5e8;
            border: 1px solid #c3e6c3;
            border-radius: 4px;
            padding: 15px;
            margin: 20px 0;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>🐳 CSP Demo Container Running!</h1>
        
        <div class="warning">
            <strong>⚠️ You are accessing the containerized demo via localhost!</strong><br>
            For the full domain-based demonstration, add hosts file entries.
        </div>
        
        <h2>Container Status:</h2>
        <ul>
            <li>✅ NGINX is running on port 80</li>
            <li>✅ Express backend is running on port 3001</li>
            <li>✅ All CSP scenarios are available</li>
        </ul>
        
        <h2>Setup Custom Domains (Optional):</h2>
        <p><strong>Add these entries to your hosts file:</strong></p>
        <div class="code-block">127.0.0.1 demo.example.com<br>127.0.0.1 vulnerable.example.com<br>127.0.0.1 basic-csp.example.com<br>127.0.0.1 hash-csp.example.com<br>127.0.0.1 nonce-nginx.example.com<br>127.0.0.1 nonce-helmet.example.com<br>127.0.0.1 malicious.example.com</div>
        
        <div class="next-step">
            <strong>🎯 After hosts setup, visit:</strong><br>
            <a href="http://demo.example.com/" style="color: #1976d2; text-decoration: none; font-weight: bold;">http://demo.example.com/</a>
        </div>
        
        <h2>Quick Access (Current Setup):</h2>
        <p>You can access the demo scenarios directly:</p>
        <ul>
            <li><a href="/vulnerable">Vulnerable Demo</a> - No CSP protection</li>
            <li><a href="/basic-csp">Basic CSP Demo</a> - Basic implementation</li>
            <li><a href="/hash-csp">Hash-based CSP</a> - SHA-256 allowlisting</li>
            <li><a href="/nonce-nginx">NGINX Nonce</a> - Real NGINX implementation</li>
            <li><a href="/nonce-helmet">Helmet Nonce</a> - Application-level</li>
            <li><a href="/malicious">Malicious Domain</a> - Attacker simulation</li>
        </ul>
        
        <h2>Container Information:</h2>
        <p>This container includes both NGINX and the Express.js backend, providing a complete CSP demonstration environment.</p>
    </div>
</body>
</html>';
        }
    }
}